#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
#define rep(i, n) for (int i = 0; i < (n); i++)

// N は 10桁以下 1000000000は入らないので９桁
// 9! = 362880 x 8(区切り位置) なので、そこまで大きくないので全探索する
void solve(long long N)
{
    // 後ろの桁から配列に入れていき、１桁目を削る
    vector<long long> A;
    while (N)
    {
        A.push_back(N % 10);
        N /= 10;
    }
    sort(A.begin(), A.end());

    int k = A.size();

    // next_premutationで全ての順列を試せる
    long long ans = 0;
    do
    {
        for (int i = 1; i <= k - 1; i++)
        {
            // iの場所で区切ったときの値
            long long l = 0;
            long long r = 0;

            for (int j = 0; j < i; j++)
            {
                l = l * 10 + A[j];
            }
            for (int j = i; j < k; j++)
            {
                r = r * 10 + A[j];
            }

            ans = max(ans, l * r);
        }
    } while (next_permutation(A.begin(), A.end()));
    cout << ans << endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    std::scanf("%lld", &N);
    solve(N);
    return 0;
}
