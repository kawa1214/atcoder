#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

const string YES = "Yes";
const string NO = "No";

void solve(long long N, long long M, std::vector<long long> A, std::vector<long long> B)
{
    map<int, int> mp;

    for (int i = 0; i < M; i++)
    {
        int a = A[i];
        int b = B[i];

        if (mp.count(a) == 1)
        {
            mp[a] += 1;
        }
        else
        {
            mp[a] = 1;
        }
        if (mp.count(b) == 1)
        {
            mp[b] += 1;
        }
        else
        {
            mp[b] = 1;
        }
    }

    bool check = true;

    for (int i = 1; i < M + 2; i++)
    {
        if (mp[i] >= 3)
        {
            check = false;
        }
    }
    if (check)
    {
        cout << YES << endl;
    }
    else
    {
        cout << NO << endl;
    }
}

// Generated by 2.11.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    std::scanf("%lld", &N);
    long long M;
    std::scanf("%lld", &M);
    std::vector<long long> A(M);
    std::vector<long long> B(M);
    for (int i = 0; i < M; i++)
    {
        std::scanf("%lld", &A[i]);
        std::scanf("%lld", &B[i]);
    }
    solve(N, M, std::move(A), std::move(B));
    return 0;
}
